####################################################
### 5. 막대 그래프
# #https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.bar.html?highlight=bar#matplotlib.pyplot.bar

import matplotlib.pyplot as plt
import numpy as np

x = np.arange(3)
values = [100, 400, 900]

plt.bar(x, values)
plt.axhline(200, color='r', linestyle="--")
# plt.axvline(0.5, color='k')  # x=0.5 값에  수직 line 생성
plt.xticks(x, labels=['2017', '2018', '2019'])
plt.show()


##### stacked bar plot 1
import numpy as np
import matplotlib.pyplot as plt

menMeans = (20, 35, 30, 35, 27)
womenMeans = (25, 32, 34, 20, 25)

x = np.arange(5)

p1 = plt.bar(x, menMeans)
p2 = plt.bar(x, womenMeans,  bottom=menMeans) #겹쳐서 안보임

plt.ylabel('num')
plt.title('Exam')
plt.xticks(x, ('1', '2', '3', '4', '5'))
plt.yticks(np.arange(0, 81, 10))
plt.legend(['Men', 'Women'])

plt.show()

##### stacked bar plot 2

import numpy as np
import matplotlib.pyplot as plt

catMeans = (20, 35, 30, 35, 27)
dogMeans = (25, 32, 34, 20, 25)
birdMeans = (5, 2, 4, 2, 5)

x = np.arange(5)

p1 = plt.bar(x, catMeans, width=0.35, color='#d62728')
p2 = plt.bar(x, dogMeans, width=0.35, bottom=catMeans)
p2 = plt.bar(x, birdMeans, width=0.35, bottom=catMeans)

plt.ylabel('num')
plt.title('Pet ')
plt.legend(['cat', 'dog','bird'])

plt.show()


####################################################
### 6. 산점도
'''
   산점도(scatter)
   - 산점도는 두 변수의 상관관계를 직교 좌표계의 평면에 데이터를 점으로 표현하는 그래프이다.

'''
import matplotlib.pyplot as plt
import numpy as np

np.random.seed(1234)

N = 50
x = np.random.rand(N)
y = np.random.rand(N)
colors = np.random.rand(N)
area = (30 * np.random.rand(N))**2

plt.scatter(x, y, s=area, c=colors, alpha=0.5) # s는 마커의 면적, c는 마커의 색상
plt.show()

####################################################
### 7. 파이차트
'''
    파이 차트
    - 범주별 구성 비율을 원형으로 표현한 그래프이다.
      비율의 총합은 100이어야 된다.

'''
import matplotlib.pyplot as plt

ratio = [34, 32, 16, 18] # 총합: 100
labels = ['Apple', 'Banana', 'Melon', 'Grapes']

plt.pie(ratio,
        labels=labels,
        autopct='%.1f%%') # autopct는 부채꼴 안에 표시될 숫자의 형식. ( 소수점 한자리까지 표시)
plt.show()


####################################################
### 8. 히스토그램
'''
도수분포표: 특정 구간에 속하는 자료의 개수를 표현
히스토그램: 도수분포표를 시각화 하여 막대 그래프로 표현.
          즉, 특정구간에 속하는 자료의 개수를 그래프로 표현한 것이다.
          따라서 막대 그래프는 y값만 고려하지만, 히스토그램은 x,y 모두 고려한다.

    bins 속성은 쪼갤 구간의 갯수이다.
'''
# 1) 기본
import matplotlib.pyplot as plt

weight = [68, 81, 64, 56, 78, 74, 61, 77, 66, 68, 59, 71, 80, 59, 67, 81, 69, 73, 69, 74, 70, 65]
print(sorted(weight), len(weight))
plt.hist(weight)
plt.show()

# 2) bins 지정
import matplotlib.pyplot as plt

weight = [68, 81, 64, 56, 78, 74, 61, 77, 66, 68, 59, 71, 80, 59, 67, 81, 69, 73, 69, 74, 70, 65]
print(len(weight))
fig, axs = plt.subplots(1,2)
axs[0].hist(weight)
axs[1].hist(weight, bins=5) # 쪼갤 구간의 갯수
plt.show()



####################################################
### 9. box

## 가) 기본
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
np.random.seed(1234)
# 박스plot는 홀수값 지정
x = np.random.random(9)
print(x)
'''
[0.9581393536837052, 0.8018721775350193, 
0.7853585837137692,  # ( 3사분위 )
0.7799758081188035, 
0.6221087710398319, # 중앙값 ( 2사분위 ) 
0.4377277390071145, 
0.2764642551430967,  # ( 1사분위 ) 
0.2725926052826416, 0.1915194503788923]
'''
print(sorted(x, reverse=True))
plt.boxplot(x,  labels=['xx_value'])
plt.show()


print("1사분위:", np.quantile(x, 0.25)) # 0.2764642551430967
print("2사분위:", np.quantile(x, 0.5))  # 0.6221087710398319
print("3사분위:", np.quantile(x, 0.75)) # 0.7853585837137692


## 나) df 적용
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
np.random.seed(1234)

df = pd.DataFrame(np.random.rand(10, 5), columns=['A', 'B', 'C', 'D', 'E'])
print(df.describe())
plt.boxplot(df, labels=df.columns)
plt.show()



####################################################
### 10. 그래프에 text 추가
'''

    plt.text(x,y, mesg ) 

'''
import matplotlib.pyplot as plt
import numpy as np

fig = plt.figure()
# ax = plt.axes()
x = np.arange(3)
values = [100, 400, 900]

plt.bar(x, values)
plt.axhline(200, color='r', linestyle="--")
plt.xticks(x, labels=['2017', '2018', '2019'])

# text 지정
for idx, v in enumerate(values):
    # ax.text(x[idx], v, v)  # ax.text(x,y, mesg )
    plt.text(x[idx], v, v )  # plt.text(x,y, mesg )
plt.show()
