####################################################
#### 3. 조회

'''
 행과 컬럼은 label과 Integer location으로 참조할 수 있다.
   다음과 같은 3가지 방법으로 참조한다.
   
   가.  [] : 인덱싱 연산자, 컬럼(들)을 선택하는 목적
           예> [컬럼] ==> Series 반환 ( index와 값 으로 구성됨 )
              [[컬럼,컬럼]] ==> DataFrame 반환
              
   나.  .loc :  label만을 사용한다. ( 기본적으로 index의 label로 인식 )
               label은 single, list, slice 형태 모두 가능하다.
               행과 열을 동시에 조회할 수 있다. df.loc[행,열]
               행과 컬럼 모두 label 만 사용 가능하다.
               
   다.  .iloc :   loc와 유사하지만 정수위치값만을 사용한다.
                  행과 컬럼 모두 위치값 만 사용 가능하다.
'''

## 1) 컬럼 조회
'''
    DataFrame 의 컬럼(들) 조회 ==> SQL의  projection 기능

    1. 단일컬럼 조회 ==> Series 반환
      1) df.컬럼명
      2) df['컬럼명']

    2. 멀티컬럼 조회 ==> DataFrame 반환
      1) df[['컬럼명','컬럼명2',...]]
'''

# 1. 싱글 및 멀티 컬럼 조회
df = pd.DataFrame({"col1" : [4 ,5, 6, 6],
                   "col2" : [7, 8, 9, 9],
                   "col3" : [10, 11, 12, 12]},
                   index = list("ABCD"))

print("1. col1 컬럼만 조회")
print(df.col1 )     # Series 반환

print("2. col1 컬럼만 조회")
print(df['col1'])  # Series 반환

print("3. col1와 col2 컬럼 조회")
print(df[['col2', 'col1']])  # fancy 색인 비슷 , # DataFrame 반환

print("4. col1 컬럼만 여러번 조회")
print(df[['col1','col1','col1']])  # DataFrame 반환



## 2) 행 조회
'''
   DataFrame 의 행(들) 조회 ==> SQL의  selection 기능

    1. 행 인덱스의 label 이용 
      - df.loc[label]                ==> 인덱싱 label, Series 반환
      - df.loc[[label,label2,....]]  ==> fancy label, DataFrame 반환
      - df.loc[lable:label2]          ==> slicing label, DataFrame 반환  
      - df.loc[[True,False,..]]      ==> boolean 색인 
      
    2. 행 인덱스의 위치 이용
      - df.iloc[위치]                  ==> 인덱싱 위치, Series 반환
      - df.iloc[[위치,위치1,...]]       ==> fancy 위치, DataFrame 반환
      - df.iloc[위치:위치2]             ==> slicing 위치, DataFrame 반환
      - df.iloc[[True,False,..]]      ==> boolean 색인  
'''

df = pd.DataFrame({"col1" : [4 ,5, 6, 6,1],
                   "col2" : [7, 8, 9, 9,2],
                   "col3" : [10, 11, 12, 12,10]},
                   index = list("ABCDE"))
print(df)
## df.loc 
print("1. A 행 출력(인덱싱 label)")
print(df.loc["A"]) # Series 반환
print("2. A 와 B행 출력(fancy label)")
print(df.loc[["A","B"]]) # DataFrame 반환
print("3. B행부터 D행까지 출력(slicing label)")
print(df.loc["B":"D"]) # DataFrame 반환
print("4. A,C,E행 출력(boolean label)")
print(df.loc[[True,False,True,False,True]]) # DataFrame 반환

## df.iloc 
print("1. A 행 출력(인덱싱 위치)")
print(df.iloc[0]) # Series 반환
print("2. A 와 B행 출력(fancy 위치)")
print(df.iloc[[0,1]]) # DataFrame 반환
print("3. B행부터 D행까지 출력(slicing label)")
print(df.iloc[1:-1]) # DataFrame 반환
print("4. A,C,E행 출력(boolean label)")
print(df.iloc[[True,False,True,False,True]]) # DataFrame 반환


## 조회후 값 변경
df = pd.DataFrame({"col1" : [4 ,5, 6, 6,1],
                   "col2" : [7, 8, 9, 9,2],
                   "col3" : [10, 11, 12, 12,10]},
                   index = list("ABCDE"))
print(df)

## 3) 행 및 컬럼 조회
'''
   DataFrame 의 행과 컬럼 조회 

    1. 행 인덱스의 label 이용 
      ==> 기본 문법은 df.loc[행label, 컬럼label]
      ==> 행label은 인덱스라벨,fancy,슬라이싱,boolean 모두 가능 
      ==> 컬럼label은 인덱스라벨,fancy,슬라이싱,boolean 모두 가능 
      
    2. 행 인덱스의 위치 이용
    ==> 기본 문법은 df.iloc[행위치, 컬럼위치]
    
'''
import  pandas as pd
import numpy as np

df = pd.DataFrame({"col1" : [4 ,5, 6, 6,1],
                   "col2" : [7, 8, 9, 9,2],
                   "col3" : [10, 11, 12, 12,10]},
                   index = list("ABCDE"))






